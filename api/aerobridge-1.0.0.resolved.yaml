---
openapi: "3.0.2"
info:
  title: "Aerobrige Server API specification"
  description: |-
    All the Interfaces for the Aerobridge server are defined here, using these APIs, you can interact with the Digital Sky API, store flight plans and manage keys. 
    
    The API is a limited subset of all the functionality of the Management server. Aerobridge provides a user interface as well and it is recommended that you use the user interface to create some entries in the database.

    Unless otherwise specified, fields specified in a message but not declared in the API shall be ignored.

  version: "1.5.0"
servers:
  - url: "https://virtserver.swaggerhub.com/cygnus2936/aerobridge/1.0.0"
    description: "Aerobridge Server API"
security:
  - AuthFromPassport:
      - "aerobridge.write"
      - "aerobridge.read"

paths:
  /ping:
    get:
      summary: "Server heartbeat operation"
      description: "This operation is a ping to check if the server is running"
      security: []
      responses:
        "200":
          description: "pong"
          
  /pki/credentials/:
    get:
      summary: "List all credentials stored"
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: listCredentials
      description: List all credentials in the server. Aerobridge stores credentials securely and this API decrypts 
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AerobridgeCredential'
          description: 'List of all credentials stored'
      tags:
        - Credentials
    post:
      summary: "Create a new credential"
      security:
        - AuthFromPassport: [aerobridge.write]    

      operationId: createCredentials
      description: Upload details to create a new credential object and store it securely
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AerobridgeCredential'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AerobridgeCredential'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AerobridgeCredential'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AerobridgeCredential'
          description: ''
      tags:
        - Credentials

  /pki/credentials/{id}:
    get:
      summary: "Get details of a single credential"
      security:
        - AuthFromPassport: [aerobridge.read]    

      operationId: retrieveCredentials
      description: Retrieve or delete a credential instance.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this credential.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AerobridgeCredential'
          description: ''
      tags:
        - Credentials
    delete:
      summary: "Delete credential details"
      security:
        - AuthFromPassport: [aerobridge.write]    

      operationId: deleteCredentials
      description: Delete a Credentials instance.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this credential.
        schema:
          type: string

      responses:
        '200':
          description: Deleted
        '404':
          description: id not found
        '401':
          description: Unauthorized
          
      tags:
        - Credentials

  /gcs/firmware:
    get:
      summary: "A list of all Firmware stored"
      operationId: listFirmwares
      description: 'Get a list of all Firmware stored in Aerobridge'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Firmware'
          description: ''
      tags:
      - Firmware
    put:
      summary: "Add a new firmware release"
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: createFirmware
      description: 'Update the server with a new Firmware version'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Firmware'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Firmware'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Firmware'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
      tags:
      - Firmware

  /gcs/firmware/{firmware_id}:
    get:
      summary: "Get a single firmware download details"
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: retrieveFirmware
      description: 'Get a specific firmware by id'
      parameters:
      - name: firmware_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Firmware'
          description: ''
      tags:
      - Firmware

  /gcs/flight-plans:
    get:
      operationId: listFlightPlans
      summary: Get all Flight Plans
      description: 'Get a list of all Flight Plans Aerobridge'
      security:
        - AuthFromPassport: [aerobridge.read]    
      parameters: []
      responses:
        '200':          
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightPlanList'
          description: 'All flight plans retrieved'
      tags:
      - Flight Plans
    post:
      operationId: createFlightPlan
      summary: Create new Flight Plan
      description: 'Upload a new flight plan in Aerobridge'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightPlan'
              
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
          description: 'Flight Plan successfully created'
      tags:
      - Flight Plans

  /gcs/flight-plans/{flightplan_id}:
    get:
      operationId: retrieveFlightPlan
      summary: Get Single Flight Plan
      description: 'Get details of a single plan'
      security:
        - AuthFromPassport: [aerobridge.read]    
      parameters:
      - name: flightplan_id
        in: path
        required: true
        description: 'ID of the Flight Plan in Aerobridge'
        schema:
          type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
          description: 'Flight Plan retrieved successfullly'
      tags:
      - Flight Plans

    put:
      operationId: updateFlightPlan
      summary: Update details of a Flight Plan
      description: 'Update existing flight plan'
      security:
        - AuthFromPassport: [aerobridge.write]    
      parameters:
      - name: flightplan_id
        in: path
        required: true
        description: 'ID of the Flight Plan in Aerobridge'
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightPlan'
              
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPlan'
          description: 'Flight Plan updated'
      tags:
      - Flight Plans

    delete:
      operationId: destroyFlightPlan
      summary: Remove Flight Plan
      description: 'Delete flight plan from Aerobridge'
      security:
        - AuthFromPassport: [aerobridge.write]    
      parameters:
      - name: flightplan_id
        in: path
        required: true
        description: 'ID of the Flight Plan in Aerobridge'
        schema:
          type: string
      responses:
        '204':
          description: 'Flight Plan deleted successfully'
      tags:
      - Flight Plans

  /gcs/flight-operations:
    get:
      operationId: listFlightOperations
      summary: List all Flight Operations
      description: 'Get all Flight Operations in Aerobridge'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightOperationList'
          description: 'Operations retrieved successfully'
      tags:
      - Flight Operations
      
  /gcs/flight-operations/{flightoperation_id}:
    get:
      operationId: retrieveFlightOperation
      summary: Get a single Flight Operation
      description: ''
      parameters:
      - name: flightoperation_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightOperation'
          description: 'Operation retrieved successfully'
      tags:
      - Flight Operations
      

  /gcs/flight-logs:
    get:
      summary: List all Flight Logs
      operationId: listFlightLogs
      description: 'List of all raw logs and details of signed flight logs stored in Aerobridge'
      security:
        - AuthFromPassport: [aerobridge.read]    
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightLog'
          description: 'Successfully retrieved all flight logs'
      tags:
      - Flight Logs
    post:    
      operationId: createFlightLog
      summary: Create a new Flight Log
      description: 'Upload a new flight log object, you will need a URL for a Cloud File first'
      security:
        - AuthFromPassport: [aerobridge.write]    
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightLog'
              
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightLog'
          description: 'Successfully created a new flight log object'
      tags:
      - Flight Logs


  /gcs/flight-logs/{flightlog_id}:
    get:
      operationId: retrieveFlightLog
      summary: Get a single Flight Log
      description: ''
      security:
        - AuthFromPassport: [aerobridge.read]    
      parameters:
      - name: flightlog_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightLog'
          description: 'Successfully retrieved new flight log object'
      tags:
      - Flight Logs
    put:
      operationId: updateFlightLog
      summary: Update a Flight Log
      description: ''
      security:
        - AuthFromPassport: [aerobridge.write]    
      parameters:
      - name: flightlog_id
        in: path
        required: true
        description: 'ID of the flight log to be updated'
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightLog'
              
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightLog'
          description: 'Successfully updated flight log'
      tags:
      - Flight Logs
    delete:
      operationId: destroyFlightLog
      summary: Remove Flight Log 
      description: 'Remove flight log from Aerobridge'
      security:
        - AuthFromPassport: [aerobridge.write] 
      parameters:
      - name: flightlog_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: 'Flight log deleted successfully'
      tags:
      - Flight Logs

  /gcs/flight-logs/{id}/sign:
    put:
      operationId: Sign a Flight Log
      description: 'Sign a Flight Log with the private key of the drone, a new signed flight log object is created'
      parameters:
      - name: id
        in: path
        required: true
        description: 'ID of the raw log '
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedFlightLog'
          description: 'Flight Log signed successfully'
        '404':
          content:
            application/json:              
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: 'A Flight Log object was not found'
        '409':
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
          description: 'The Flight Log has already been signed'
      tags:
      - Flight Logs

  /gcs/signed-flight-logs:
    get:
      operationId: List all Signed logs
      description: 'A list of all logs signed using the private key of the drone'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignedFlightLog'
          description: 'All signed flight log details successfully retrieved'
      tags:
      - Signed Flight Logs
  /gcs/signed-flight-logs/{id}:
    get:
      operationId: Get single flight log
      description: 'Retrieve the details of a single flight log'
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this signed flight log.
        schema:
          type: string
      responses:
        '200':      
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedFlightLog'
          description: 'Signed flight log details successfully retrieved'
      tags:
      - Signed Flight Logs
  /gcs/files:
    get:
      summary: "A list of all uploaded files"
      operationId: listCloudFiles
      description: 'Get a list of all Files stored in the cloud via Aerobridge, you can configure multiple S3 like cloud providers to host your files.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudFile'
          description: 'Successfully retrieved all cloud files'
      tags:
      - Files
      
  /gcs/files/{file_id}:
    get:
      summary: "Get a single file details"
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: retrieveCloudFile
      description: 'Get a specific file details by id'
      parameters:
      - name: file_id
        in: path
        required: true
        description: 'A UUID of the file object'
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudFile'
          description: 'Successfully retrieved single cloud files'
      tags:
      - Files

  /gcs/files/documents/upload:
    put:
      summary: "Upload a single document"
      security:
        - AuthFromPassport: [aerobridge.write]    
      operationId: createCloudFileDocument
      description: 'Upload a document to Aerobridge, use this endpoint to upload PDFs, certificates etc.'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                # 'file' will be the field name in this multipart request
                file:
                  type: string
                  format: binary

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudFile'
          description: ''
      tags:
      - Files

  /gcs/files/photos/upload:
    put:
      summary: "Upload a single photo"
      security:
        - AuthFromPassport: [aerobridge.write]    
      operationId: createCloudFileDocument
      description: 'Upload a photo to Aerobridge, use this endpoint to upload jpgs etc.'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                # 'file' will be the field name in this multipart request
                file:
                  type: string
                  format: binary

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudFile'
          description: ''
      tags:
      - Files


  /gcs/all_permissions:
    get:
      summary: "Get all flight permissions"
      description: 'Use this endpoint to retrieve all flight permissions'
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: listFlightPermissions
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightPermission'
          description: ''
      tags:
      - Flight Permissions
  /gcs/all_permissions/{id}:
    get:
      summary: "Get a single permission"
      security:
        - AuthFromPassport: [aerobridge.read]    
      description: 'Use this endpoint to retrieve details of a single flight permission'

      operationId: retrieveFlightPermission
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this flight permission.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPermission'
          description: ''
      tags:
      - Flight Permissions

  /gcs/all_permissions/{id}/apply:
    put:
      summary: "Apply for a flight permission to DigitalSky"
      security:
        - AuthFromPassport: [aerobridge.write]    
      description: 'Use this endpoint to apply for a flight permission for a flight operation. You will have to create a flight permission object'

      operationId: applyFlightPermission
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this flight permission object.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightPermission'
          description: ''
      tags:
      - Flight Permissions

  # /digitalsky/logs/:
  #   get:
  #     summary: "Get a list of all transactions with Digital Sky"
  #     security:
  #       - AuthFromPassport: [aerobridge.read]    

  #     operationId: listDigitalSkyLogs
  #     description: ''
  #     parameters: []
  #     responses:
  #       '200':
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/DigitalSkyLog'
  #         description: ''
  #     tags:
  #     - Digital Sky
  # /digitalsky/logs/{log_id}:
  #   get:
  #     summary: "Get details of a single transaction log"
  #     security:
  #       - AuthFromPassport: [aerobridge.read]    

  #     operationId: retrieveDigitalSkyLog
  #     description: ''
  #     parameters:
  #     - name: log_id
  #       in: path
  #       required: true
  #       description: ''
  #       schema:
  #         type: string
  #     responses:
  #       '200':
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/DigitalSkyLog'
  #         description: ''
  #     tags:
  #     - Digital Sky
  

  /registry/aircraft/:
      get:
        security:
          - AuthFromPassport: [aerobridge.read]    
        operationId: Get all Aircrafts
        description: List all aircrafts in the database
        parameters: []
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Aircraft'
            description: ''
        tags:
        - Aircrafts
          

  /registry/aircraft/{id}:
    get:
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: Get Single Aircraft
      description: Retrieve details of a Aircraft instance.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this aircraft.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftDetail'
          description: ''
      tags:
        - Aircrafts

  /registry/aircraft/rfm/{flight_controller_id}:
    get:
      security:
        - AuthFromPassport: [aerobridge.read]    
      operationId: Get Single Aircraft (RFM ID)
      description: Retrieve details of a Aircraft instance using the RFM ID.
      parameters:
      - name: flight_controller_id
        in: path
        required: true
        description: A flight controller id that is linked to this aircraft.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftDetail'
          description: ''
      tags:
        - Aircrafts

  /registry/operators/:
    get:

      security:
        - AuthFromPassport: [aerobridge.read]        
      operationId: Get all Operators
      description: List all operators in Aerobridge
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operator'
          description: 'Successfully retrieved all operators'
      tags:
      - Operator
  /registry/operators/{id}:
    get:

      security:
        - AuthFromPassport: [aerobridge.read]        
      operationId: Get single Operator
      description: Get details of a single operator in Aerobridge
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this operator.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
          description: 'Successfully retrieved single operator details'
      tags:
      - Operator
  /registry/manufacturers/:
    get:

      security:
        - AuthFromPassport: [aerobridge.read]        
      operationId: List all Manufacturers
      description: List all manufacturers in Aerobridge, use this endpoint to link specific manufacturer detail and their public / signing key.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manufacturer'
          description: 'Successfully retrieved all manufacturers'
      tags:
      - Manufacturer
  /registry/manufacturers/{id}:
    get:

      security:
        - AuthFromPassport: [aerobridge.read]        
      operationId: Get Single Manufacturer
      description: Retrieve details of a single Manufacturer 
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this operator.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: 'Successfully retrieved manufacturer details'
      tags:
      - Manufacturer       

tags:
  - name: Files
    description: "Aerobridge provides functionality to upload files to your favourite cloud provider, use these endpoints to manage files, you will have to configure the cloud provider during installion / configuration of Aerobridge"
  - name: Manufacturer
    description: "Aerobridge stores details of aircraft manufacturers, manufacturers are linked to aircraft and control release of firmware"
  - name: Operator
    description: "Operators have a very specific definition and are enties who fly and operate a drone, use these endpoints to identify and query operators stored in Aerobridge"
  - name: Aircrafts
    description: "All endpoints related to Aircraft objects stored in Aerobridge, we recommend that you use the frontend to create a new Aircraft"    
  # - name: Digital Sky
  #   description: "Aerobridge can communicate with Digital Sky and all endpoints related to Digital Sky are here. As of September-2021 Digital Sky is changing and some commands and endpoints are not supported."      
  - name: Flight Permissions
    description: "Flight Permissions are issued by Digital Sky and you can use these endpoints to download permission objects."
  - name: Signed Flight Logs
    description: "Flights logs can be signed on the management server use these enpoints to interact with the flight logs signed on the server"
  - name: Flight Logs
    description: "After the mission is complete use these endpoints to upload flight logs to the management server."
  - name: Flight Operations
    description: "Flight Operations depend on flight plans and specify details about operation that will enable the drone to fly the plan. Use these endpoints to interact with operations stored in the management server."
  - name: Flight Plans
    description: "Flight plans are GeoJSON objects that can be stored in the server, usually flight plans are generated on the GCS and stored on the management server. A operation is created against the plan and permission artefacts retrieved for the operation."
  - name: Firmware
    description: "Manufacturer can  sign and release firmwares and these endpoints help in downloading firmware to the GCS"
  - name: Credentials
    description: "Aerobrdige can store credentials securely on the server, use these endpoints to store public and private keys and retrieve the associated details with the credentials."

components:

  securitySchemes:
    AuthFromPassport:
      description: |-
          Openskies provides a open-source OAUTH server: [https://id.openskies.sh](https://id.openskies.sh), it or any OAUTH 2.0 server that can issue JWT tokens can be used to conrol acceess. Access is controlled via access tokens that are JSON Web Tokens as defined in RFC 7519, using the `RS256` algorithm for the signature, publish to all providers the public key for verifying that signature, and implement standard OAuth server discovery mechanisms as described in RFC 8414.

          The following fields shall be included in the JWT claim for access tokens issued by this authority:
              * `iss`, with the URL at which the token generation request was received.
              * `exp`, with a time no further than 1 hour in the future.
              * `sub`, with unique ID of the client requesting the access token.
              * `scope`, with a list of space-separated strings (per RFC 6749) indicating the scopes granted.
              * `jti`, according to RFC 7519.

          Clients shall provide these access tokens in an `Authorization` header in the form `Bearer <token>` in accordance with RFC 6750. 

      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "http://id.openskies.sh/oauth/token/"
          scopes:
            aerobridge.write: "Write data into Aerobridge"
            aerobridge.read: "Read data from Aerobridge"

  schemas:
    Operator:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          maxLength: 280
        website:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        expiration:
          type: string
          format: date-time
          example: '2021-09-24T13:53:14'
        operator_type:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-09-24T13:53:14'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-09-24T13:53:14'
        vat_number:
          type: string
          nullable: true
          maxLength: 25
          example: 'CE1558433548'
        insurance_number:
          type: string
          nullable: true
          maxLength: 25
          example: 'CDDFEF23DW'
        company_number:
          type: string
          nullable: true
          maxLength: 25
          example: '3934304933'
        country:
          enum:
          - IN
          type: string
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address_line_1:
              type: string
              maxLength: 140
            address_line_2:
              type: string
              nullable: true
              maxLength: 140
            address_line_3:
              type: string
              nullable: true
              maxLength: 140
            postcode:
              type: string
              maxLength: 10
            city:
              type: string
              maxLength: 140
            country:
              enum:
              - IN
              type: string
            created_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
        operational_authorizations:
          type: array
          items:
            type: string
          example: ['SORA']
        authorized_activities:
          type: array
          items:
            type: string
          example: ['Videotaping']
      required:
      - company_name
      - website
      - email
      - address
      - operational_authorizations
      - authorized_activities

    AerobridgeCredential:
      type: object
      properties:
        token:
          type: string
          readOnly: true
        name:
          type: string
          description: Enter a friendly name / description for the type of credential
            you are storing
          pattern: ^[-, ,_\w]*$
          maxLength: 100
        token_type:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: >
            Sort order:
             * `0` - Public Key
             * `1` - Private Key
             * `2` - Authentication Token
             * `3` - Other
             * `4` - Digital Certificate
        association:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: >
            Set the entity this credential is associated with. The association will be used when calling Digital Sky and other external servers
            Sort order:
             * `0` - Operator
             * `1` - Manufacturer
             * `2` - Pilot
             * `3` - RFM
             * `4` - DSC / eMudra Token
          type: integer
        is_active:
          type: boolean
          description: Set whether the credential is still active
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5d84afc6-47e1-4b92-ad9e-541b8ebc54b1
        aircraft:
          type: string
          format: uuid
          nullable: true
          description: A UUID of the aircraft in the system that is associated with this token, optional
          example: 846ddb6c-2fcf-4617-8f3b-b6dcf86ceeb0
        manufacturer:
          type: string
          format: uuid
          nullable: true
          description: A UUID of the manufacturer in the system that is associated with this token, optional
          example: 94fa5ad6-e82e-4f65-be93-07b62fb89195
        operator:
          type: string
          format: uuid
          nullable: true
          description: A UUID of the operator in the system that is associated with this token, optional
          example: edcbafed-edc7-47bb-96ee-5ed972bb977c
      required:
      - name
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        prefix:
          type: string
          maxLength: 12
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        aircraft:
          type: string
          nullable: true
    Firmware:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        binary_file_url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
          description: The Files API provides ways to generate a URL to upload your files
        public_key:
          type: string
          description: The CRC or SHA-256 hash for the firmware
        version:
          type: string
          maxLength: 25
          description: It is recommended that you maintain major and minor version consistent with the Semver (https://semver.org/) spec
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - binary_file_url
      - public_key
      - version
    CloudFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        location:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
        name:
          type: string
          example: 'uin_certificate.pdf'
        upload_type:
          enum:
          - logs
          - documents
          - other
          type: string
          example: documents
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:      
      - location
      - name
    FlightPlan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 30
        geo_json:
          type: object
          $ref: '#/components/schemas/GeoJSON'
          nullable: true
          description: Paste flight plan geometry
        is_editable:
          type: boolean
          description: Set whether the flight plan can be edited. Once the flight
            log has been signed a flight plan cannot be edited.
          readOnly: true
          
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - start_datetime
      - end_datetime
      - geo_json
      - name
      
    FlightPlanList:
      type: array
      items:         
          $ref: "#/components/schemas/FlightPlan"
      
    FlightOperationList:
      type: array
      items:         
          $ref: "#/components/schemas/FlightOperation"
    FlightOperation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Give a friendly name for this operation
          maxLength: 140
        type_of_operation:
          enum:
          - 0
          - 1
          type: integer
          description: At the moment, only VLOS and BVLOS operations are supported,
            for other types of operations, please issue a pull-request
        created_at:
          type: string
          format: date-time
          readOnly: true
        drone:
          type: string
          description: Pick the drone that will be used to fly this opreation
        flight_plan:
          type: string
        purpose:
          type: string
          description: To add additional categories, please add entries to the Activities
            table
        pilot:
          type: string
          description: Assign a pilot for this operation
      required:
      - drone
      - flight_plan
      - pilot
    FlightLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
                 
        raw_log:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        operation:
          type: string
          format: uuid
      required:
      - raw_log
      - operation
    
    FlightPermission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        operation:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            drone:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  readOnly: true
                mass:
                  type: integer
                make:
                  type: string
                  nullable: true
                  maxLength: 280
                master_series:
                  type: string
                  nullable: true
                  maxLength: 280
                series:
                  type: string
                  nullable: true
                  maxLength: 280
                popular_name:
                  type: string
                  nullable: true
                  maxLength: 280
                category:
                  enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  type: integer
                registration_mark:
                  type: string
                  nullable: true
                  maxLength: 10
                sub_category:
                  enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  type: integer
                icao_aircraft_type_designator:
                  type: string
                  maxLength: 4
                max_certified_takeoff_weight:
                  type: string
                  format: decimal
                  multipleOf: 0.001
                  maximum: 10000000
                  minimum: -10000000
                max_height_attainable:
                  type: string
                  format: decimal
                  multipleOf: 0.001
                  maximum: 10000000
                  minimum: -10000000
                commission_date:
                  type: string
                  format: date-time
                  nullable: true
                model:
                  type: string
                  maxLength: 280                  
                flight_controller_id:
                  type: string
                operating_frequency:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                status:
                  enum:
                  - 0
                  - 1
                  type: integer
                photo:
                  type: string
                  format: uri
                  nullable: true
                  maxLength: 200
                  pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                    d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                    [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                    -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                    -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                    d{2,5})?(?:[/?#][^\\s]*)?\\z"
                photo_small:
                  type: string
                  format: uri
                  nullable: true
                  maxLength: 200
                  pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                    d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                    [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                    -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                    -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                    d{2,5})?(?:[/?#][^\\s]*)?\\z"
                identification_photo:
                  type: string
                  format: uri
                  nullable: true
                  maxLength: 200
                  pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                    d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                    [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                    -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                    -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                    d{2,5})?(?:[/?#][^\\s]*)?\\z"
                identification_photo_small:
                  type: string
                  format: uri
                  nullable: true
                  maxLength: 200
                  pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                    d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                    [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                    -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                    -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                    d{2,5})?(?:[/?#][^\\s]*)?\\z"
                max_endurance:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                max_range:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                max_speed:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                dimension_length:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                dimension_breadth:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                dimension_height:
                  type: string
                  format: decimal
                  multipleOf: 0.01
                  maximum: 100000000
                  minimum: -100000000
                created_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
                manufactured_at:
                  type: string
                  format: date-time
                  nullable: true
                operator:
                  type: string
                manufacturer:
                  type: string
                type_certificate:
                  type: string
                  nullable: true
                engine:
                  type: integer
                  nullable: true
              required:
              - mass
              - model
              - operator
              - manufacturer
              readOnly: true
            flight_plan:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  readOnly: true
                name:
                  type: string
                  maxLength: 30
                details:
                  type: string
                  nullable: true
                  description: Paste flight plan geometry
                start_datetime:
                  type: string
                  format: date-time
                end_datetime:
                  type: string
                  format: date-time
                created_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
              required:
              - start_datetime
              - end_datetime
              readOnly: true
            name:
              type: string
              maxLength: 30
            type_of_operation:
              enum:
              - 0
              - 1
              type: integer
              description: At the moment, only VLOS and BVLOS operations are supported,
                for other types of operations, please issue a pull-request
            flight_termination_or_return_home_capability:
              type: boolean
            geo_fencing_capability:
              type: boolean
            detect_and_avoid_capability:
              type: boolean
            recurring_time_expression:
              type: string
              maxLength: 50
            recurring_time_duration:
              type: integer
            created_at:
              type: string
              format: date-time
              readOnly: true
            purpose:
              type: string
              description: To add additional categories, please add entries to the
                Activities table
          readOnly: true
        is_successful:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        artefact:
          type: string
    
    DigitalSkyLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        response_code:
          type: string
          maxLength: 256
        response:
          type: string
        timestamp:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
        txn:
          type: string
      required:
      - response_code
      - timestamp
      - txn
            
    Aircraft:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        operator:
          type: string
          format: uuid
          example: 34496e37-bbba-4ebf-8a26-66780e6f78e6
          description: ID of a operator flying the mission
        mass:
          type: integer
          example: 400
          description: Mass of the aircraft in grams
        manufacturer:
          type: string
          format: uuid
          example: 2752bb92-a184-4c89-8eb2-cd07f310fead
          description:  ID of the manufacturer manufacturing the drone
        model:
          type: string
          maxLength: 280
          example: eBee X201
          description: A detailed model of the drone, for more information see http://www.intlaviationstandards.org/Documents/AircraftMakeModelSeriesBusinessRules1.pdf
        status:
          enum:
          - 0
          - 1
          type: integer
          example: 1
          description: Specify if the drone is marked as active in the management server
        registration_mark:
          type: string
          nullable: true
          maxLength: 10
          example: IND-223202
          description: Registration details of the drone as provided by DigitalSky 
        category:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          type: integer
          example: 0
          description: |-
            Category of a aircraft: 
                - 0 Other
                - 1 FIXED WING
                - 2 ROTORCRAFT
                - 3 LIGHTER-THAN-AIR
                - 4 HYBRID LIFT
                - 5 MICRO
                - 6 SMALL
                - 7 MEIDUM
                - 8 Large
        created_at:
          type: string
          format: date-time
          readOnly: true
        popular_name:
          type: string
          nullable: true
          maxLength: 280
          example: eBee X2
          description: A colloquial name for the aircraft, if avaiable
        sub_category:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          type: integer
          example: 0
          description: |-
            Category of a aircraft: 
                - 0 Other
                - 1 AIRPLANE
                - 2 NONPOWERED GLIDER
                - 3 POWERED GLIDER
                - 4 HELICOPTER
                - 5 GYROPLANE
                - 6 BALLOON 
                - 7 AIRSHIP
                - 8 UAV
                - 9 Multirotor
                - 10 Hybrid
        flight_controller_id:
          type: string
          description: This is the Drone ID from the RFM
          maxLength: 140
          example: 0054883A58467889625544488798
        photo:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          description: Enter a URL for  a photo of the aircraft
        photo_small:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          description: Enter a URL for a small photo of the aircraft
        max_certified_takeoff_weight:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000000
          minimum: 0
          example: 250.00
          description: Maximum take off weight in grams
        updated_at:
          type: string
          format: date-time
          readOnly: true
          

    AircraftDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        mass:
          type: integer
          example: 400
          description: Mass of the aircraft in grams
        make:
          type: string
          nullable: true
          maxLength: 280
          description: Make of the drone, if applicable, see for more information, https://www.intlaviationstandards.org/Documents/AircraftMakeModelSeriesBusinessRules1.pdf
        master_series:
          type: string
          nullable: true
          maxLength: 280
          example: X2
          description: Drone master-series 
        series:
          type: string
          nullable: true
          maxLength: 280
          example: X2B
          description: Drone production series, if applicable 
        popular_name:
          type: string
          nullable: true
          maxLength: 280
          example: eBee X2B
        category:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          type: integer
          example: 0
          description: |-
            Category of a aircraft: 
                - 0 Other
                - 1 FIXED WING
                - 2 ROTORCRAFT
                - 3 LIGHTER-THAN-AIR
                - 4 HYBRID LIFT
                - 5 MICRO
                - 6 SMALL
                - 7 MEIDUM
                - 8 Large
        registration_mark:
          type: string
          nullable: true
          maxLength: 10
          example: IND-223202
          description: Registration details of the drone as provided by DigitalSky 
        sub_category:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          type: integer
          example: 0
          description: |-
            Category of a aircraft: 
                - 0 Other
                - 1 AIRPLANE
                - 2 NONPOWERED GLIDER
                - 3 POWERED GLIDER
                - 4 HELICOPTER
                - 5 GYROPLANE
                - 6 BALLOON 
                - 7 AIRSHIP
                - 8 UAV
                - 9 Multirotor
                - 10 Hybrid
        icao_aircraft_type_designator:
          type: string
          maxLength: 4
          example: DRNB
          description: "Set the ICAO aicraft type designator if availble: https://www.icao.int/publications/doc8643/pages/search.aspx"
        max_certified_takeoff_weight:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 10000000
          minimum: 0
          example: 35.2
        max_height_attainable:
          type: string
          format: decimal
          multipleOf: 0.001
          maximum: 400
          minimum: 0
          example: 350.0
          description: "Maximum height attainable in meteres"
        commission_date:
          type: string
          format: date-time
          nullable: true
          example: 2021-09-24T13:53
        model:
          type: string
          maxLength: 280
          example: X3
        digital_sky_uin_number:
          type: string
          description: Get a UIN number for this aircraft using the Digital Sky Portal
          maxLength: 140
          example: a83534aa-c1a0-4d28-aa49-67a588b13747
        flight_controller_id:
          type: string
          description: This is the Drone ID from the RFM
          maxLength: 140
          example: 0054883A58467889625544488798

        operating_frequency:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          example: 65.5
        status:
          enum:
          - 0
          - 1
          type: integer
        photo:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf
          description: URL of the 

        photo_small:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf
        identification_photo:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf
        identification_photo_small:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf

        max_endurance:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          example: 50.0
        max_range:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 5000
          minimum: 0
          example: 45.0
        max_speed:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          example: 45
        dimension_length:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
        dimension_breadth:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
        dimension_height:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-09-24T13:54:48'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          example: '2021-09-24T13:54:48'
        manufactured_at:
          type: string
          format: date-time
          nullable: true
          example: '2021-09-24T13:54:48'
        dot_permission_document:
          type: string
          format: uri
          description: Link to Purchased RPA has ETA from WPC Wing, DoT for operating
            in the de-licensed frequency band(s). Such approval shall be valid for
            a particular make and model
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf
        operations_manual_document:
          type: string
          format: uri
          description: Link to Operation Manual Document
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
          example: https://raw.githubusercontent.com/openskies-sh/aerobridge/master/sample-data/Aerobridge-placeholder-document.pdf
        operator:
          type: string
          format: uuid
          example: 152c79f8-caf9-423e-8602-dc7faec97ee5
        manufacturer:
          type: string
          format: uuid
          example: f190f97b-0150-43ea-8004-38ce607a98d6
        type_certificate:
          type: string
          format: uuid
          nullable: true
          exmaple: 4ca8170c-0cfa-4796-bfae-503760d738fc
        engine:
          type: integer
          nullable: true
      required:
      - mass
      - model
      - digital_sky_uin_number
      - operator
      - manufacturer

    SignedFlightLog:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            signed_log:
              type: string
              description: A signed flight log per the RPAS manuals.
              
            created_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            raw_flight_log:
              type: string
          required:
          - signed_log
          - raw_flight_log
          
    Manufacturer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          maxLength: 140
        common_name:
          type: string
          maxLength: 140
        address:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            address_line_1:
              type: string
              maxLength: 140
            address_line_2:
              type: string
              nullable: true
              maxLength: 140
            address_line_3:
              type: string
              nullable: true
              maxLength: 140
            postcode:
              type: string
              maxLength: 10
            city:
              type: string
              maxLength: 140
            country:
              enum:
              - IN
              type: string
            created_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
          required:
          - address_line_1
          - postcode
          - city
          readOnly: true
        role:
          type: string
          description: e.g. Reseller, distributor, OEM etc.
          maxLength: 140

    GeoJSON:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Polygon
            - MultiPolygon
            - LineString

        coordinates:
          type: array
          items:
            $ref: "#/components/schemas/Point2D"

    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number
