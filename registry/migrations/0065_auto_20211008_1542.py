# Generated by Django 3.2.8 on 2021-10-08 15:42

import django.core.validators
from django.db import migrations, models
import registry.models


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0064_alter_person_identification_document'),
    ]

    operations = [
        migrations.AlterField(
            model_name='activity',
            name='activity_type',
            field=models.IntegerField(choices=[(0, 'NA'), (1, 'Open'), (2, 'Specific')], default=0, help_text='Set the activity type and the airspace'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='name',
            field=models.CharField(help_text='Set a name for this activity', max_length=140),
        ),
        migrations.AlterField(
            model_name='address',
            name='city',
            field=models.CharField(help_text='Set a city for this address', max_length=140),
        ),
        migrations.AlterField(
            model_name='address',
            name='country',
            field=models.CharField(choices=[('IN', 'INDIA')], default='IN', max_length=2),
        ),
        migrations.AlterField(
            model_name='address',
            name='state',
            field=models.CharField(blank=True, choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CG', 'Chandigarh'), ('CH', 'Chhattisgarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LA', 'Ladakh'), ('LD', 'Lakshadweep'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PY', 'Puducherry'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TS', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal')], help_text='Pick a state, at the moment only Indian States are configured.', max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='airspace_type',
            field=models.IntegerField(choices=[(0, 'NA'), (1, 'Green'), (2, 'Amber'), (3, 'Red')], default=0, help_text='Set the airspace type, if available'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='authorization_type',
            field=models.IntegerField(choices=[(0, 'NA'), (1, 'Light UAS Operator Certificate'), (2, 'Standard Scenario Authorization')], default=0, help_text='Set the type of the authorization'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='end_date',
            field=models.DateTimeField(default=registry.models.two_year_expiration, help_text='By default every authorization exipres in two years, you can set a different end date'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='operation_altitude_system',
            field=models.IntegerField(choices=[(0, 'wgs84'), (1, 'amsl'), (2, 'agl'), (3, 'sps')], default=0, help_text='Set the altitude system'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='operation_area_type',
            field=models.IntegerField(choices=[(0, 'Unpopulated'), (1, 'Sparsely Populated'), (2, 'Densely Populated')], default=0, help_text='Can the operator fly over crowds? '),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='operation_max_height',
            field=models.IntegerField(default=0, help_text='Set the maximum authorized height for this authorization'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='permit_to_fly_above_crowd',
            field=models.BooleanField(default=0, help_text='Select if the company is permitted to fly above crowd'),
        ),
        migrations.AlterField(
            model_name='authorization',
            name='risk_type',
            field=models.IntegerField(choices=[(0, 'NA'), (1, 'SAIL 1'), (2, 'SAIL 2'), (3, 'SAIL 3'), (4, 'SAIL 4'), (5, 'SAIL 5'), (6, 'SAIL 6')], default=0, help_text='If available, set the airspace risk type'),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='acronym',
            field=models.CharField(help_text='If you use a acronym for this manufacturer, you can assign it here', max_length=10),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='common_name',
            field=models.CharField(help_text='Common name for the manufacturer e.g. Skydio', max_length=140),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='country',
            field=models.CharField(help_text='The three-letter ISO 3166-1 country code where the manufacturer is located', max_length=3),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='digital_sky_id',
            field=models.CharField(default='NA', help_text='Use the Digital Sky portal to create a Manufacturer profile and get an ID, paste it here', max_length=140),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='full_name',
            field=models.CharField(help_text='Full legal name of the manufacturing entity', max_length=140),
        ),
        migrations.AlterField(
            model_name='manufacturer',
            name='role',
            field=models.CharField(help_text='e.g. Reseller, distributor, OEM etc.', max_length=140),
        ),
        migrations.AlterField(
            model_name='person',
            name='date_of_birth',
            field=models.DateField(blank=True, help_text='Assign a date of birth with this person', null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='email',
            field=models.EmailField(help_text='Associate a email address with the person, this field is required', max_length=254),
        ),
        migrations.AlterField(
            model_name='person',
            name='phone_number',
            field=models.CharField(help_text='Associate a phone number with this person', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='person',
            name='social_security_number',
            field=models.CharField(blank=True, help_text='If social security / identification number is avaialble associate it with a person', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='pilot',
            name='is_active',
            field=models.BooleanField(default=0, help_text='Is this pilot active? If he is not working for the company or has moved on, set it as inactive'),
        ),
        migrations.AlterField(
            model_name='test',
            name='name',
            field=models.CharField(help_text='Set a name for this test that can be understood', max_length=100),
        ),
    ]
